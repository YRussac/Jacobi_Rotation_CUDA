#include "JacobiData.cu"#include "random"#include "iostream"__global__void compute(JacobiData* jacobi_array){    jacobi_array[blockIdx.x].jacobi_product();}int main(){//  Define the array of problems    JacobiData jacobi_array[5];    print_matrix(jacobi_array[0].A, jacobi_array[0].d, "Initial matrix A number 0");//    On CPU//    jacobi_array[0].jacobi_product();//    On GPU    // Run kernel on 1M elements on the GPU    compute<<<1, 1>>>(jacobi_array);    // Wait for GPU to finish before accessing on host    cudaDeviceSynchronize();    print_matrix(jacobi_array[0].A, jacobi_array[0].d, "Output matrix A number 0");    for (int i = 0; i < 5; ++i) {        jacobi_array[i].free_memory();    }    return 0;}